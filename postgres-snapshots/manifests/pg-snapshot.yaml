apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-snapshot
spec:
  selector:
    matchLabels:
      app: pg-snapshot
  template:
    metadata:
      labels:
        app: pg-snapshot
      annotations:
        # Snapshot capabilities only enabled for embedded databases
        kots.io/when: '{{repl ConfigOptionEquals "postgres_type" "embedded_postgres" }}'
        # Backup volume to use
        backup.velero.io/backup-volumes: scratch
    spec:
      volumes:
      - name: scratch
        emptyDir: {}
      initContainers:
        - name: pg-snapshot-init
          image: postgres:10
          envFrom:
            - secretRef:
                name: postgres
          securityContext:
            runAsUser: 0
          volumeMounts:
          - name: scratch
            mountPath: /scratch
          # Trigger restore on pod init if dump file is located in scratch directory. After restore, delete the file.
          command: ["/bin/sh", "-c", 'chmod a+w /scratch && ([ -e /scratch/backup.sql ] && export PGPASSWORD=$DB_PASSWORD && pg_restore -U $DB_USER -d $DB_NAME -h $DB_HOST --create /scratch/backup.sql && rm /scratch/backup.sql) || true']
      containers:
        - name: pg-snapshot-keepalive
          image: postgres:10
          envFrom:
            - secretRef:
                name: postgres
          securityContext:
            runAsUser: 0
          volumeMounts:
          - name: scratch
            mountPath: /scratch
          command: ["/bin/sh", "-c", "sleep infinity"]
